<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Leetocde-64:最小路径和]]></title>
    <url>%2F2019%2F07%2F01%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[个人思路总结：动态规划问题。我们新建一个额外的 dp 数组，与原矩阵大小相同。在这个矩阵中，dp(i, j) 表示从坐标 (i, j) 到右下角的最小路径权值。我们初始化右下角的 dp 值为对应的原矩阵值，然后去填整个矩阵，对于每个元素考虑移动到右边或者下面，因此获得最小路径和我们有如下递推公式： dp(i,j)=grid(i,j)+min(dp(i+1,j),dp(i,j+1)) 注意边界情况（即第一行和第一列）。 代码如下：123456789101112131415161718192021class Solution &#123;public: int minPathSum(vector&lt;vector&lt;int&gt;&gt;&amp; grid) &#123; int height = grid.size(); int width = grid[0].size(); int dp[height][width]; dp[0][0] = grid[0][0]; for(int i=1;i&lt;height;i++) dp[i][0] = grid[i][0]+dp[i-1][0]; for(int j=1;j&lt;width;j++) dp[0][j] = grid[0][j]+dp[0][j-1]; for(int i=1;i&lt;height;i++) &#123; for(int j=1;j&lt;width;j++) &#123; dp[i][j] = grid[i][j] + min(dp[i-1][j],dp[i][j-1]); &#125; &#125; return dp[height-1][width-1]; &#125;&#125;;]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F06%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
